<rxui:ReactiveUserControl
  x:Class="ProjectIndustries.ProjectRaffles.WpfUI.Views.TasksView"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:conv="clr-namespace:ProjectIndustries.ProjectRaffles.WpfUI.Infra.Converters"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:local="clr-namespace:ProjectIndustries.ProjectRaffles.WpfUI.Views"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  xmlns:rxui="http://reactiveui.net"
  xmlns:vm="clr-namespace:ProjectIndustries.ProjectRaffles.Core.ViewModels"
  xmlns:tasks="clr-namespace:ProjectIndustries.ProjectRaffles.Core.ViewModels.Tasks"
  d:DataContext="{d:DesignInstance tasks:TasksViewModel,
                                   IsDesignTimeCreatable=False}"
  d:DesignHeight="450"
  d:DesignWidth="800"
  x:TypeArguments="tasks:TasksViewModel"
  mc:Ignorable="d">
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*" />
    </Grid.ColumnDefinitions>
    <Grid>
      <Grid.Resources>
        <ResourceDictionary>
          <Style BasedOn="{StaticResource StandardComboBox}" TargetType="ComboBox" />
          <Style BasedOn="{StaticResource StandardLabel}" TargetType="TextBlock" />
          <Style BasedOn="{StaticResource StandardTextBox}" TargetType="TextBox" />
          <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="pack://application:,,,/ProjectIndustries.ProjectRaffles;component/WpfUI/Controls/FluentDataGrid.xaml" />
          </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>

      </Grid.Resources>
      <DataGrid
        Margin="26,35"
        AutoGenerateColumns="False"
        CanUserReorderColumns="False"
        CanUserResizeColumns="False"
        CanUserResizeRows="False"
        EnableColumnVirtualization="True"
        EnableRowVirtualization="True"
        FontSize="11"
        Foreground="#e1e1e1"
        HorizontalScrollBarVisibility="Auto"
        IsReadOnly="True"
        ItemsSource="{Binding Tasks}"
        RowHeight="35"
        SelectionMode="Single"
        SelectionUnit="FullRow">
        <DataGrid.Columns>
          <DataGridTextColumn
            Width="150"
            MinWidth="150"
            Binding="{Binding ProviderName}"
            Header="Site" />
          <DataGridTextColumn
            Width="5*"
            MinWidth="180"
            Binding="{Binding ProductName}"
            Header="Product" />
          <DataGridTextColumn
            Width="100"
            MinWidth="100"
            Binding="{Binding Size}"
            Header="Size" />
          <DataGridTextColumn
            Width="100"
            MinWidth="100"
            Binding="{Binding ProfileName}"
            Header="Profile" />
          <DataGridTextColumn
            Width="115"
            MinWidth="115"
            Binding="{Binding ProxyGroupName}"
            Header="Proxies" />
          <DataGridTemplateColumn
            Width="2*"
            MinWidth="115"
            Header="Status">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <StackPanel>

                  <StackPanel Orientation="Horizontal">
                    <Button
                      Margin="0,0,5,0"
                      Command="{Binding CopyStatusClipboardCommand}"
                      Style="{StaticResource IconButton}"
                      ToolTip="Copy status to clipboard"
                      Visibility="{Binding IsDescVisible, Converter={x:Static conv:BooleanToVisibilityTypeConverter.Instance}}">
                      <Button.Content>
                        <Image
                          Width="14"
                          Height="14"
                          Source="/Assets/Icons/icon-copy2clip.png" />
                      </Button.Content>
                    </Button>
                    <TextBlock
                      VerticalAlignment="Center"
                      Foreground="{Binding Status.Kind, Converter={x:Static conv:TaskStatusToColorConverter.Instance}}"
                      Text="{Binding Status.Name}"
                      TextWrapping="Wrap" />
                  </StackPanel>
                  <TextBlock
                    VerticalAlignment="Center"
                    FontSize="8"
                    Foreground="#797979"
                    Text="{Binding Status.Description}"
                    TextWrapping="Wrap"
                    Visibility="{Binding IsDescVisible, Converter={x:Static conv:BooleanToVisibilityTypeConverter.Instance}}" />
                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>

          <DataGridTemplateColumn Width="75" Header="">
            <DataGridTemplateColumn.CellTemplate>
              <DataTemplate>
                <StackPanel Orientation="Horizontal">
                  <StackPanel.Resources>
                    <ResourceDictionary>
                      <Style BasedOn="{StaticResource IconButton}" TargetType="Button">
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                      </Style>
                    </ResourceDictionary>
                  </StackPanel.Resources>
                  <Button Command="{Binding StartCommand}" Visibility="{Binding CanBeRunned, Converter={x:Static conv:BooleanToVisibilityTypeConverter.Instance}}">
                    <Button.Content>
                      <Image
                        Width="14"
                        Height="14"
                        Source="/Assets/Icons/icon-play.png" />
                    </Button.Content>
                  </Button>
                  <Button Command="{Binding RemoveCommand}" Visibility="{Binding CanBeRemoved, Converter={x:Static conv:BooleanToVisibilityTypeConverter.Instance}}">
                    <Button.Content>
                      <Image
                        Width="14"
                        Height="14"
                        Source="/Assets/Icons/icon-trash.png" />
                    </Button.Content>
                  </Button>
                  <Button Command="{Binding StopCommand}" Visibility="{Binding CanBeStopped, Converter={x:Static conv:BooleanToVisibilityTypeConverter.Instance}}">
                    <Button.Content>
                      <Image
                        Width="14"
                        Height="14"
                        Source="/Assets/Icons/icon-stop.png" />
                    </Button.Content>
                  </Button>

                </StackPanel>
              </DataTemplate>
            </DataGridTemplateColumn.CellTemplate>
          </DataGridTemplateColumn>
        </DataGrid.Columns>
      </DataGrid>

      <rxui:ViewModelViewHost
        HorizontalContentAlignment="Stretch"
        VerticalContentAlignment="Stretch"
        ViewModel="{Binding TaskEditor}" />
    </Grid>
  </Grid>
</rxui:ReactiveUserControl>
