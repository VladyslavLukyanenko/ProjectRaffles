<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
  xmlns:controls="clr-namespace:ProjectIndustries.ProjectRaffles.WpfUI.Controls"
  xmlns:conv="clr-namespace:ProjectIndustries.ProjectRaffles.WpfUI.Infra.Converters">


  <!--
    =================================================================
    NotificationsButtonItem
    ==================================================================
  -->
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewHover.Background" Color="#282828" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewHover.Border" Color="#181818" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewSelected.Background" Color="#181818" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewSelected.Border" Color="#181818" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewSelectedHover.Background" Color="#282828" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewSelectedHover.Border" Color="#181818" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewSelectedNoFocus.Background" Color="#282828" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewSelectedNoFocus.Border" Color="#181818" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewFocus.Border" Color="#181818" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewHoverFocus.Background" Color="#282828" />
  <SolidColorBrush x:Key="NotificationsButtonItem.ItemsviewHoverFocus.Border" Color="#181818" />


  <Style x:Key="NotificationsButtonItemStyle" TargetType="{x:Type ComboBoxItem}">
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Padding" Value="13,6" />
    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="#323232" />
    <Setter Property="BorderThickness" Value="0,1,0,0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
          <Border
            x:Name="Bd"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="0"
            SnapsToDevicePixels="true">
            <ContentPresenter
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource NotificationsButtonItem.ItemsviewHover.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource NotificationsButtonItem.ItemsviewHover.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource NotificationsButtonItem.ItemsviewSelected.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource NotificationsButtonItem.ItemsviewSelected.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource NotificationsButtonItem.ItemsviewSelectedHover.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource NotificationsButtonItem.ItemsviewSelectedHover.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="True" />
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource NotificationsButtonItem.ItemsviewSelectedNoFocus.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource NotificationsButtonItem.ItemsviewSelectedNoFocus.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="False" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource NotificationsButtonItem.ItemsviewFocus.Border}" />
            </MultiTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="False" />
                <Condition Property="IsMouseOver" Value="True" />
                <Condition Property="UIElement.IsKeyboardFocused" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="Bd" Property="Background" Value="{StaticResource NotificationsButtonItem.ItemsviewHoverFocus.Background}" />
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource NotificationsButtonItem.ItemsviewHoverFocus.Border}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>



  <Style x:Key="NotificationsMenuWrapper" TargetType="ToggleButton">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="ToggleButton">
          <ContentPresenter
            x:Name="PART_ContentPresenter"
            Margin="{TemplateBinding Padding}"
            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
            RecognizesAccessKey="True"
            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="UserMenuItem" TargetType="Button">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="#323232" />
    <Setter Property="Foreground" Value="#676767" />
    <Setter Property="HorizontalAlignment" Value="Stretch" />
    <Setter Property="HorizontalContentAlignment" Value="Left" />
    <Setter Property="Padding" Value="12,6" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="FontSize" Value="10" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border
            Width="{TemplateBinding Width}"
            Background="Transparent"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <ContentPresenter
              Margin="{TemplateBinding Padding}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              RecognizesAccessKey="True"
              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Foreground" Value="#777777" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style TargetType="controls:NotificationsButton">
    <Setter Property="OverridesDefaultStyle" Value="true" />
    <Setter Property="IsTabStop" Value="false" />
    <Setter Property="Focusable" Value="false" />
    <Setter Property="ItemContainerStyle" Value="{StaticResource NotificationsButtonItemStyle}" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="controls:NotificationsButton">
          <Grid>
            <Popup
              x:Name="PART_Popup"
              Grid.ColumnSpan="2"
              MinWidth="190"
              Margin="1,2"
              AllowsTransparency="true"
              IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              Placement="Bottom"
              PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
              <theme:SystemDropShadowChrome
                x:Name="shadow"
                MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                Color="Transparent">
                <Border
                  x:Name="DropDownBorder"
                  Padding="0,8"
                  Background="#232323"
                  BorderBrush="Transparent"
                  BorderThickness="0"
                  CornerRadius="0 0 10 10">

                  <StackPanel>

                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <TextBlock
                        Height="20"
                        Padding="10,0"
                        VerticalAlignment="Center"
                        FontSize="13"
                        FontWeight="DemiBold"
                        Foreground="#E6FFFFFF"
                        Text="Notifications" />

                      <Button
                        Grid.Column="1"
                        Height="Auto"
                        Margin="10,0,10,0"
                        Padding="12,3"
                        VerticalAlignment="Center"
                        Command="{TemplateBinding ClearCommand}"
                        Content="Clear"
                        FontSize="10"
                        IsEnabled="{TemplateBinding IsEmpty,
                                                    Converter={x:Static conv:InverseBooleanConverter.Instance}}"
                        Style="{StaticResource CriticalButton}" />
                    </Grid>

                    <Border
                      Margin="0,10,0,0"
                      Padding="10,10,0,0"
                      BorderBrush="#323232"
                      BorderThickness="0,1,0,0"
                      Visibility="{TemplateBinding IsEmpty,
                                                   Converter={x:Static conv:BooleanToVisibilityTypeConverter.Instance}}">
                      <TextBlock
                        FontSize="10"
                        Foreground="#494949"
                        Text="No new notifications" />
                    </Border>


                    <ScrollViewer
                      x:Name="DropDownScrollViewer"
                      Margin="0,6,0,0"
                      MaxHeight="250"
                      Background="Transparent"
                      VerticalScrollBarVisibility="Auto">
                      <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                        <Canvas
                          x:Name="canvas"
                          Width="0"
                          Height="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Top">
                          <Rectangle
                            x:Name="OpaqueRect"
                            Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                            Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                            Fill="Transparent" />
                        </Canvas>


                        <ItemsPresenter
                          x:Name="ItemsPresenter"
                          KeyboardNavigation.DirectionalNavigation="Contained"
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                      </Grid>
                    </ScrollViewer>
                  </StackPanel>

                </Border>
              </theme:SystemDropShadowChrome>
            </Popup>

            <ToggleButton
              x:Name="wrap"
              Background="Transparent"
              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
              Style="{StaticResource NotificationsMenuWrapper}">
              <Border
                x:Name="templateRoot"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="3"
                SnapsToDevicePixels="true">

                <Grid>
                  <Ellipse
                    Width="5"
                    Height="5"
                    Margin="3"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Fill="#FF5260"
                    Visibility="{TemplateBinding IsEmpty,
                                                 Converter={x:Static conv:InvertedBooleanToVisibilityTypeConverter.Instance}}" />
                  <Image
                    Width="21"
                    Height="21"
                    Source="/Assets/Icons/icon-notifications.png" />
                </Grid>
              </Border>
            </ToggleButton>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
              <Setter TargetName="wrap" Property="Background" Value="Transparent" />
              <Setter TargetName="wrap" Property="Opacity" Value=".7" />
            </Trigger>
            <Trigger Property="IsDropDownOpen" Value="true">
              <Setter TargetName="wrap" Property="Opacity" Value=".7" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>