<ResourceDictionary
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
  <Style x:Key="DataGridCellHighContrastFocusVisual">
    <Setter Property="Control.Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid>
            <Rectangle
              Margin="1,1,1,1"
              SnapsToDevicePixels="true"
              Stroke="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"
              StrokeThickness="1" />
            <Rectangle
              Margin="1,1,1,1"
              SnapsToDevicePixels="true"
              Stroke="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
              StrokeDashArray="2 2"
              StrokeThickness="1" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
  <SolidColorBrush x:Key="MainForeground" Color="#818181" />
  <SolidColorBrush x:Key="ContentBackground" Color="#171717" />
  <SolidColorBrush x:Key="HeaderBackground" Color="#222222" />

  <Style x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid}, ResourceId=DataGridSelectAllButtonStyle}"
         TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid Width="0">
            <Rectangle
              x:Name="Border"
              Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
              SnapsToDevicePixels="True" />
            <Polygon
              x:Name="Arrow"
              Margin="8,8,3,3"
              HorizontalAlignment="Right"
              VerticalAlignment="Bottom"
              Fill="Black"
              Opacity="0.15"
              Points="0,10 10,10 10,0"
              Stretch="Uniform" />
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Border" Property="Stroke"
                      Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Border" Property="Fill"
                      Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
    <Setter Property="Background" Value="{StaticResource ContentBackground}" />
    <Setter Property="Foreground" Value="{StaticResource MainForeground}" />
    <Setter Property="BorderBrush" Value="#FF688CAF" />
    <Setter Property="BorderThickness" Value="0" />
    <!--  This is needed to force DG to have a non-default value.  Otherwise the DGR.DetailsVisibility cannot have a value of VisibleWhenSelected by default.  -->
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
    <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
    <Setter Property="GridLinesVisibility" Value="Horizontal" />
    <Setter Property="HorizontalGridLinesBrush" Value="#212121" />
    <Setter Property="ScrollViewer.PanningMode" Value="Both" />
    <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGrid}">
          <Grid Background="{TemplateBinding Background}">
            <Border
              Padding="{TemplateBinding Padding}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              CornerRadius="10"
              SnapsToDevicePixels="True">
              <ScrollViewer Name="DG_ScrollViewer" Focusable="false">
                <ScrollViewer.Template>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>

                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>

                      <!--  Left Column Header Corner  -->
                      <!--<Button
                                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}"
                                            Command="{x:Static DataGrid.SelectAllCommand}"
                                            Focusable="false"
                                            Style="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type DataGrid},
                                                                                          ResourceId=DataGridSelectAllButtonStyle}}"
                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />-->
                      <!--  Column Headers  -->
                      <Grid Grid.Column="1">
                        <Border Background="{StaticResource HeaderBackground}" CornerRadius="10,10,0,0" />
                        <Border Padding="20,0">
                          <DataGridColumnHeadersPresenter Name="PART_ColumnHeadersPresenter"
                                                          Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />
                        </Border>
                      </Grid>

                      <!--  DataGrid content  -->
                      <ScrollContentPresenter
                        x:Name="PART_ScrollContentPresenter"
                        Grid.Row="1"
                        Grid.ColumnSpan="2"
                        Margin="20,0"
                        CanContentScroll="{TemplateBinding CanContentScroll}" />

                      <ScrollBar
                        Name="PART_VerticalScrollBar"
                        Grid.Row="1"
                        Grid.Column="2"
                        Maximum="{TemplateBinding ScrollableHeight}"
                        Orientation="Vertical"
                        ViewportSize="{TemplateBinding ViewportHeight}"
                        Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        Value="{Binding Path=VerticalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                      <Grid Grid.Row="2" Grid.Column="1">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition
                            Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NonFrozenColumnsViewportHorizontalOffset}" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ScrollBar
                          Name="PART_HorizontalScrollBar"
                          Grid.Column="1"
                          Maximum="{TemplateBinding ScrollableWidth}"
                          Orientation="Horizontal"
                          ViewportSize="{TemplateBinding ViewportWidth}"
                          Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                          Value="{Binding Path=HorizontalOffset, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" />

                      </Grid>
                    </Grid>
                  </ControlTemplate>
                </ScrollViewer.Template>
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <MultiTrigger>
        <MultiTrigger.Conditions>
          <Condition Property="IsGrouping" Value="true" />
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
        </MultiTrigger.Conditions>
        <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
      </MultiTrigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
    <Setter Property="Padding" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
          <Grid Margin="{TemplateBinding Padding}">
            <DataGridColumnHeader Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
            <ItemsPresenter />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Width" Value="8" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeWE" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
    <Setter Property="Height" Value="8" />
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="Cursor" Value="SizeNS" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Thumb}">
          <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static DataGridColumnHeader.ColumnFloatingHeaderStyleKey}" TargetType="{x:Type Control}">
    <Setter Property="Opacity" Value="0.6" />
    <Setter Property="BorderBrush" Value="#FF688CAF" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Control}">
          <Border
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Grid>
              <Canvas Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Static DataGridColumnHeader.ColumnHeaderDropSeparatorStyleKey}" TargetType="{x:Type Separator}">
    <Setter Property="Background" Value="#FF000080" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Separator}">
          <Border
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="SnapsToDevicePixels" Value="true" />
    <Setter Property="Padding" Value="0" />
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
    <Setter Property="ValidationErrorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <TextBlock
            Margin="2,0,0,0"
            VerticalAlignment="Center"
            Foreground="Red"
            Text="!" />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRow}">
          <Border
            x:Name="DGR_Border"
            Padding="{TemplateBinding Padding}"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <SelectiveScrollingGrid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
              </Grid.ColumnDefinitions>

              <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
              </Grid.RowDefinitions>

              <DataGridCellsPresenter
                Grid.Column="1"
                ItemsPanel="{TemplateBinding ItemsPanel}"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

              <DataGridDetailsPresenter
                Grid.Row="1"
                Grid.Column="1"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                Visibility="{TemplateBinding DetailsVisibility}" />

              <DataGridRowHeader
                Grid.RowSpan="2"
                SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
            </SelectiveScrollingGrid>
          </Border>

          <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
              <Setter TargetName="DGR_Border" Property="Background" Value="#1FFFFFFF" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true" />
                <Condition Property="Selector.IsSelectionActive" Value="false" />
              </MultiTrigger.Conditions>
              <Setter TargetName="DGR_Border" Property="Background" Value="#0FFFFFFF" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsNewItem" Value="True">
        <Setter Property="Margin"
                Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=NewItemMargin}" />
      </Trigger>
    </Style.Triggers>
  </Style>

  <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
          <ItemsPresenter />
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000" />

  <Thickness x:Key="DataGridCellHighContrastBorderThickness">1.5</Thickness>

  <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="BorderBrush" Value="Transparent" />
    <Setter Property="BorderThickness" Value="0" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridCell}">
          <Border
            Name="Bd"
            Padding="16,14"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="True">
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
          </Border>
          <ControlTemplate.Triggers>
            <MultiDataTrigger>
              <MultiDataTrigger.Conditions>
                <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true" />
                <Condition Binding="{Binding Path=IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                           Value="true" />
              </MultiDataTrigger.Conditions>
              <Setter TargetName="Bd" Property="BorderBrush"
                      Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
              <Setter TargetName="Bd" Property="BorderThickness"
                      Value="{StaticResource DataGridCellHighContrastBorderThickness}" />
            </MultiDataTrigger>
            <Trigger Property="IsSelected" Value="True">
              <Setter Property="Foreground" Value="{StaticResource MainForeground}" />
            </Trigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Property="IsSelected" Value="true" />
                <Condition Property="Selector.IsSelectionActive" Value="false" />
              </MultiTrigger.Conditions>
              <Setter Property="Foreground" Value="{StaticResource MainForeground}" />
            </MultiTrigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Style.Triggers>
      <Trigger Property="IsKeyboardFocusWithin" Value="True">
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}" />
      </Trigger>
      <Trigger Property="IsEnabled" Value="false">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
      </Trigger>
      <MultiDataTrigger>
        <MultiDataTrigger.Conditions>
          <Condition Binding="{Binding Path=(SystemParameters.HighContrast)}" Value="true" />
        </MultiDataTrigger.Conditions>
        <Setter Property="FocusVisualStyle" Value="{StaticResource DataGridCellHighContrastFocusVisual}" />
      </MultiDataTrigger>
    </Style.Triggers>
  </Style>

  <!--<Style x:Key="{x:Static DataGridComboBoxColumn.TextBlockComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ContentPresenter
                        Margin="1,1,1,1"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        IsHitTestVisible="false"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->


  <!--  [[Aero.NormalColor, Aero2.NormalColor, Royale.NormalColor, AeroLite.NormalColor, Classic]]  -->

  <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Background" Value="Transparent" />
    <!--  #222222  -->
    <Setter Property="Foreground" Value="#FF5260" />
    <Setter Property="Padding" Value="16,14" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
          <Grid>
            <theme:DataGridHeaderBorder
              Padding="{TemplateBinding Padding}"
              Background="{TemplateBinding Background}"
              BorderBrush="{TemplateBinding BorderBrush}"
              BorderThickness="{TemplateBinding BorderThickness}"
              IsClickable="{TemplateBinding CanUserSort}"
              IsHovered="{TemplateBinding IsMouseOver}"
              IsPressed="{TemplateBinding IsPressed}"
              SeparatorBrush="{TemplateBinding SeparatorBrush}"
              SeparatorVisibility="{TemplateBinding SeparatorVisibility}"
              SortDirection="{TemplateBinding SortDirection}">
              <ContentPresenter
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                RecognizesAccessKey="True"
                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </theme:DataGridHeaderBorder>

            <Thumb
              x:Name="PART_LeftHeaderGripper"
              HorizontalAlignment="Left"
              Style="{StaticResource ColumnHeaderGripperStyle}" />
            <Thumb
              x:Name="PART_RightHeaderGripper"
              HorizontalAlignment="Right"
              Style="{StaticResource ColumnHeaderGripperStyle}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
          <Grid>
            <theme:DataGridHeaderBorder
              Padding="{TemplateBinding Padding}"
              Background="Transparent"
              BorderBrush="Transparent"
              BorderThickness="0"
              Orientation="Horizontal"
              SeparatorBrush="Transparent"
              SeparatorVisibility="Collapsed">

              <StackPanel Orientation="Horizontal">
                <ContentPresenter
                  VerticalAlignment="Center"
                  RecognizesAccessKey="True"
                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Control
                  SnapsToDevicePixels="false"
                  Template="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=ValidationErrorTemplate}"
                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}, Path=(Validation.HasError), Converter={StaticResource bool2VisibilityConverter}}" />
              </StackPanel>
            </theme:DataGridHeaderBorder>
            <Thumb
              x:Name="PART_TopHeaderGripper"
              VerticalAlignment="Top"
              Style="{StaticResource RowHeaderGripperStyle}" />
            <Thumb
              x:Name="PART_BottomHeaderGripper"
              VerticalAlignment="Bottom"
              Style="{StaticResource RowHeaderGripperStyle}" />
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>